input {
  file {
    path => "/var/log/aerospike/aerospike.log"
    type => "asd"
    start_position => "end" # Default = end
  }
}

filter {
  if [type] == "asd" {
      mutate {
        gsub => ["message" , "\n", "LINE_BREAK" ]
      }
      grok {
        patterns_dir => ["./patterns"]
        match => { "message" => ["%{AS_NS}","%{AS_TICK}","%{AS_HIST}","%{AS_NSUP}","%{AS_XDR}","%{AS_SINDEX}","%{AS_LOG}"] }
      }
      multiline {
        patterns_dir => ["./multi_pattern"]
        pattern => "%{AS_TICK}|%{HISTOGRAM}|{%{AS_HEADER}stacktrace: %{AS_REST:stacktrace}"
        what => "previous"
      }
      kv{
        value_split => ": "
        field_split => "() "
        prefix => "histogram_"
        source => "histogram"
        remove_field => [ "histogram" ]
      }
      mutate {
         convert => {
                 "histogram_00" => "integer"
                 "histogram_01" => "integer"
                 "histogram_02" => "integer"
                 "histogram_03" => "integer"
                 "histogram_04" => "integer"
                 "histogram_05" => "integer"
                 "histogram_06" => "integer"
                 "histogram_07" => "integer"
                 "histogram_08" => "integer"
                 "histogram_09" => "integer"
                 "histogram_10" => "integer"
        }
      }


      date {
        match => [ "logdate", "MMM dd YYYY HH:mm:ss ZZZ", "MMM d YYYY HH:mm:ss ZZZ"]
      }
    }
}

output {
  elasticsearch {
    host => localhost
    type => aerospike
  }

  # stdout {
  #   codec => rubydebug
  # }
}
